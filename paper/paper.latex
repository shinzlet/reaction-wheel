\documentclass[12pt]{article}

\usepackage{mathtools}
\usepackage{amsfonts}
\usepackage{calrsfs}
\usepackage{graphicx}

\DeclareMathAlphabet{\pazocal}{OMS}{zplm}{m}{n}
\newcommand{\lgr}{\mathcal{L}}
\newcommand{\dif}{\mathrm{d}}
\newcommand{\deriv}[2]{\frac{\dif #1}{\dif #2}}
\newcommand{\pderiv}[2]{\frac{\partial #1}{\partial #2}}


\title{Superlinear Angular Momentum in Reaction Wheels}
\author{Seth Hinz}
\date{\today}


\begin{document}
\maketitle

\section{Introduction}
In several robotics applications, reaction wheels are used to control the
rotation of a body. However, they do have some drawbacks - size, mass, and
controllability are all important factors to consider. For my term project, I
will be analyzing a reaction wheel with variable radius, which may offer
mitigations to these shortcomings.
\\
\\
\textbf{Note:} media and source code associated with this project can be
found at \emph{github.com/shinzlet/reaction-wheel}.

\subsection{Traditional Construction}
Before we introduce a reaction wheel with variable radius, it is useful to
examine the simpler fixed-radius case. To provide the largest moment of inertia,
we will model the reaction wheel as a thin ring of mass $m$ at a radius $r$ from
the axis of rotation (which, importantly, is the symmetry axis of the ring).\\

\begin{center}
	\includegraphics[scale=0.4]{fixed_radius}
\end{center}

From this model, we can calculate the moment of inertia via integrating over the
mass:

\begin{align}
	I &= \oint_\mathrm{ring} \dif m \\
	  &= \int_0^{2\pi} (\frac{m}{2 \pi r}) (r^2) r \dif \theta \\
	  &= \frac{mr^2}{2\pi}\int_0^{2\pi} \dif \theta \\
	  &= mr^2
\end{align}

Using this result, we can now find the angular momentum of the system.

\begin{align}
	L &= I \omega \\
	  &= \omega mr^2 \label{eq:linear_L}
\end{align}

Earlier, I stated that the controllability of a reaction wheel needs to be
considered during the design process. Equation \eqref{eq:linear_L} shows why this is
true - the angular momentum added to a body by a reaction wheel is only linear
in the angular velocity. So, if a large amount of angular acceleration is
needed quickly, a motor driving a reaction wheel must drastically alter its
speed.

\subsection{Variable Radius}
The motivation for using a wheel with changing radius can now be illustrated.
If the radial term in equation \eqref{eq:linear_L} was replaced by an increasing
function in $\omega$ (namely, $L(\omega) = m \omega \cdot r(\omega)^2$), then we
could push $L(\omega)$ far above linearity. Any motor speed decrease that
maintains angular momentum will come at the cost of a larger torque, of course,
but this may be a desirable tradeoff.

This insight led me to investigate a reaction wheel that uses discrete,
spring-affixed masses about a central hub. In this model, each spring is
flexible in only the radial direction, which reduces the number of degrees of
freedom in this problem. Each appendage has mass $m$, and there are $N$ of them
in total. The rotation of the system is measured via the angle of $r_0$, which
is referred to as $\theta_0$.

\begin{center}
	\includegraphics[width=\textwidth]{project}
\end{center}


One important thing to note is that this model cannot enforce all radii to be
the same. $r_0$, the radius of the first arm, might be different than $r_1$ due
to gravitational effects. Keeping this in mind, we will first model the most
general version of this system that we can, and then simplify as needed.

\section{Lagrangian Model}
\subsection{General Case}
We begin by finding the coordinates and velocities of the involved objects:

\begin{align}
	\theta_n &= \theta_0 + 2\pi\frac{n}{N}\\
	\dot{\theta_n} &= \dot{\theta_0} \equiv \omega \\
	x_i &= r_n \cos(\theta_n)\\
	y_i &= r_n \sin(\theta_n)\\
	\dot{x_n} &= \dot{r_n} \cos(\theta_n) - r_n \sin(\theta_n)\dot{\theta_0}\\
	\dot{y_n} &= \dot{r_n} \sin(\theta_n) + r_n \cos(\theta_n)\dot{\theta_0}
\end{align}

Now, we can model the kinetic energy of the system.

\begin{align}
	T &= \sum_{n=0}^{N-1} \frac{1}{2} m (\dot{x_n}^2 + \dot{y_n}^2)\\
	  &= \frac{m}{2} \sum_{n=0}^{N-1}
		(\dot{r_n} \cos(\theta_n) - r_n \sin(\theta_n)\dot{\theta_0})^2
		+ (\dot{r_n} \sin(\theta_n) + r_n \cos(\theta_n)\dot{\theta_0})^2\\
	  &= \frac{m}{2} \sum_{n=0}^{N-1} \left(\dot{r_n}^2 + r_n^2 \dot{\theta_0}^2\right)
\end{align}

Next, we find the potential energy:

\begin{align}
	U &= \sum_{n=0}^{N-1} \left(\frac{1}{2}k(\ell_0-r_n)^2 + m g r_n
		\sin(\theta_n)\right)
\end{align}

Finally, we can combine these to yield the lagrangian for this system.

\begin{align}
	\mathcal{L} &= T - U\\
		&= \sum_{n=0}^{N-1} \frac{m}{2}\left(\dot{r_n}^2 + r_n^2
			\dot{\theta_0}^2\right) - \frac{1}{2}k(\ell_0-r_n)^2 - m g r_n \sin(\theta_n)
\end{align}

Now, we can find the Euler-Lagrange equations. This system has $s=N+1$ degrees of
freedom. $N$ of these are given by the parameters $r_0, r_1, \dots, r_{N-1}$,
and the final parameter is $\theta_0$.

Although we do technically have $N+1$ Euler-Lagrange equations, $N$ of them will
be indistinguishable due to symmetry. We'll begin with the equation for the
angle:

\begin{align}
	\deriv{}{t} \left(\pderiv{\lgr}{\dot{\theta_0}}\right)
	&= \deriv{}{t} \sum_{n=0}^{N-1} m\dot{\theta_0} r_n^2\\
	&= m \sum_{n=0}^{N-1} \ddot{\theta_0}r_n^2 + 2r_n\dot{\theta_0}\dot{r_n} \\
	&= \pderiv{\lgr}{\theta_0}
	= -mg\sum_{n=0}^{N-1}r_n\cos(\theta_n)\dot{\theta_0}\\
\end{align}

Dividing out the common $m$ term, we see that the equation simplifies to the
following.

\begin{align}
	\sum_{n=0}^{N-1} \ddot{\theta_0}r_n^2 + 2r_n\dot{\theta_0}\dot{r_n}
	&= -g\sum_{n=0}^{N-1}r_n\cos(\theta_n)\dot{\theta_0}
\end{align}

We'll now compute the Euler-Lagrange equations for the remaining $N$ parameters
- however, as mentioned, the symmetry of the problem means this is really just
a single computation.

\begin{align}
	\deriv{}{t} \left(\pderiv{\lgr}{\dot{r_n}}\right)
	&= \deriv{}{t} \left( m \dot{r_n} \right)
	= m \ddot{r_n}\\
	&= \pderiv{\lgr}{r_n}
	= \left( m\dot{\theta_0}^2r_n
		+ k(\ell_0-r_n) - mg\sin(\theta_n)
	\right)
\end{align}

Motivated by the math of a simple spring oscillation, we'll introduce the
fundamental frequency, $\omega_0 = \sqrt{\frac{k}{m}}$, into this calculation by
dividing mass through.

\begin{align}
	\ddot{r_n}
	&= \dot{\theta_0}^2r_n + \frac{k}{m}(\ell_0-r_n) - g\sin(\theta_n) \\
	&= \dot{\theta_0}^2r_n + \omega_0^2(\ell_0-r_n) - g\sin(\theta_n)
\end{align}

To summarize, our Euler-Lagrange equations are shown below.

\begin{gather}
	\ddot{r_n} = \dot{\theta_0}^2r_n + \omega_0^2(\ell_0-r_n) - g\sin(\theta_n),\ 
		\forall n \in [0, N-1] \\
	\sum_{n=0}^{N-1} \ddot{\theta_0}r_n^2 + 2r_n\dot{\theta_0}\dot{r_n}
	= -g\sum_{n=0}^{N-1}r_n\cos(\theta_n)\dot{\theta_0}
\end{gather}

\subsection{Angular Momentum}
Recall that the motivation of this system is to change the relationship between
angular velocity and angular momentum within a system. Although we cannot
calculate this particular function, it is important to see how we \emph{could}
compute the angular momentum in a variable-radius model.

\begin{align}
	I &= m \sum_{n=0}^{N-1} r_n^2\\
	\implies L &= m\dot\theta\sum_{n=0}^{N-1} r_n^2
\end{align}

\subsection{Simplified Analysis}
The lagrangian that we just derived is too rich to solve by hand (for a
third year, at least), but it is hard to interpret them. In such situations, it
is often desirable to use an approximate system where oscillations about an
equilibrium are small. If this strategy works here, it may provide some insight
into the angular momentum response of this system.

For our analysis, we'll restrict N to being 1, which will effectively model a
spring-pendulum system. This restriction is needed both for simplicity and for
an equilibrium to exist - any higher number of masses would counterbalance the
system, which would make the equilibrium angle non-constant.

We begin by formulating our reduced lagrangian:

\begin{align}
	\lgr_r &= \frac{m}{2}\left(\dot{r}^2+r^2\dot{\theta}^2\right)
		-\frac{1}{2}k(\ell_0-r)^2-mgr\sin{\theta}
\end{align}

To use a small oscillations approximation, we'll first taylor expand around the
global minimum of $U$, which we'll find now:

\begin{gather}
	\pderiv{U_r}{\theta} = -mgr\cos(\theta) \equiv 0\\
	r \neq 0 \implies \cos(\theta) = 0\\
	\theta = \pm \frac{\pi}{2}
\end{gather}

Obviously, the stable equilibrium will occur when the mass is at its lowest point
(otherwise, the situation is analogous to an inverted pendulum). So, $\theta_0 =
-\frac{\pi}{2}$ (note: $\theta_0$ is used to refer to the equilibrium angle in
this section, but it is used in other sections to refer to the angle between the
+x axis and the first arm.)

\begin{gather}
	\pderiv{U_r}{r} = k(\ell_0-r)-mg\sin(\theta) \equiv 0\\
	\implies r=\ell_0-\frac{mg}{k}\sin(\theta)\\
	\theta = -\frac{\pi}{2} \implies r = \ell_0 + \frac{mg}{k}
\end{gather}

Thus, our stable equilibrium point is $(r_0, \theta_0) = (\ell_0 + \frac{mg}{k}, -\frac{pi}{2})$.

Now, we can take our taylor expansion of the lagrangian. This calculation was tedious
and not very enlightening, so was not typeset - the rough work for this project
is available in its GitHub repository.

\begin{align}
	\lgr_r = \frac{m}{2}\left(\dot r^2+r_0^2\dot\theta^2\right)
		- \frac{k}{2}(r-r_0)^2-\frac{mgr_0}{2}(\theta+\frac{\pi}{2})^2
\end{align}

Now, we can compute the simplified Euler-Lagrange equations:

\begin{align}
	\deriv{}{t}\left(\pderiv{\lgr_r}{\dot r}\right) &= m\ddot r\\
	&= \pderiv{\lgr_r}{r} =-k(r-r_0)\\
	\implies \ddot r &= - \omega_0^2 (r - r_0)
\end{align}

\begin{align}
	\deriv{}{t}\left(\pderiv{\lgr_r}{\dot \theta}\right) &= mr_0^2\ddot \theta\\
	&= \pderiv{\lgr_r}{\theta} = -mgr_0(\theta+\frac{\pi}{2})\\
	\implies r_0\ddot \theta &= -g(\theta + \frac{\pi}{2})
\end{align}

These expressions must be simplified via a change of variables:

\begin{align}
	&\theta + \frac{\pi}{2} \rightarrow \phi\\
	&r - r_0 \rightarrow x\\
	\implies &\ddot x = -\omega_0^2 x\\
	\implies &\ddot \phi = -\frac{g}{r_0}\phi
\end{align}

These equations are reassuring, because they look identical to the motion of a
spring at rest and the motion of a planar pendulum respectively.  To solve this,
we'll use the standard prescription for small oscillations.  Note that the
constants are in different units - length ($A$) and angle ($B$).

\begin{align}
	x(t) &\equiv A \cos(\omega t + \gamma)\\
	\phi(t) &\equiv B\cos(\Omega t + \delta)
\end{align}

Note that there are different frequencies for these - this is because our taylor
expansion was, although standard, too simple to capture the coupling in this system.
As a result, there might not be a common frequency.

\begin{align}
	\ddot x &= -\omega^2 A \cos(\omega t + \gamma)\\
	&= -\omega_0^2 x\\
	&= -\omega_0^2 A \cos(\omega t + \gamma)\\
	\implies \omega^2 &= \omega_0^2\ \mathrm{where}\ \omega_0 = \sqrt \frac{k}{m}\\
	\implies \omega &= \pm \sqrt \frac{k}{m}
\end{align}

\begin{align}
	\ddot \phi &= -\Omega^2 B \cos(\Omega t + \delta)\\
	&= -\frac{g}{r_0} B \cos(\Omega t + \delta)\\
	\implies \Omega^2 &= \frac{g}{r_0}\\
	\implies \Omega &= \pm \sqrt\frac{g}{\ell_0 + \frac{mg}{k}}
\end{align}

Finally, we can reverse the substitutions:

\begin{align}
	r(t) = \ell_0 + \frac{mg}{k} + A\cos(\pm\sqrt \frac{k}{m}t+\gamma)\\
	\theta(t) = B\cos(\pm\sqrt\frac{g}{\ell_0+\frac{mg}{k}}t+\delta) - \frac{pi}{2}
\end{align}

Although these equations \emph{are} a valid approximation of the restricted
system, we now see that this approach cannot help us determine the angular
momentum response. The taylor approximation stripped the angle-radius coupling
away, which means that that radius is not, in fact, a function of $\dot \theta$
as we had initially posited. We'll have to use a more precise method to get our
results.

\section{Numerical Approximation}
\subsection{Method}
In the previous sections, we examined this system from an analytical
perspective. However, these techniques alone were unable to see how angular
momentum is related to angular velocity. To better understand the
behavior of a variable-radius reaction wheel, we'll turn to numerical
simulations.

Because we are about to introduce a discrete time system, a few definitions are
in order. We first redefine time to be discrete - $t = i\Delta t$. Next,
we define the counterclockwise angle between the $+x$ axis and the $n$th arm of
the reaction wheel as $\theta_n^i$, where $i$ signifies the time index.
Similarly, the length of that arm at that same time is denoted $r_n^i$. Keep in
mind that, although $r_n^i$ are independent of one another, our model only has a
single angle parameter, $\theta_0^i$. Thus, we define the other angles based off
of it as such:

\begin{align}
	\theta_n^i=\theta_i+2\pi\frac{n}{N}
\end{align}

Now, we'll transform our differential equations. First, we must convert our
Euler-Lagrange equations into a finite difference approximation. The angular
equation used a forwards difference approximation of $\dot{\theta}$.

\begin{gather}
	\theta_0^{i+1}=\frac{(2\beta-\Delta t \alpha)\theta_0^i +(\Delta \alpha
		- \beta)\theta_0^{i-1}-g\gamma\Delta t ^2}{\beta}\\
	\mathrm{where}\ 
	\alpha = \frac{1}{\Delta t} \sum_{n=0}^{N-1}2r_n^i(r_n^i-r_n^{i-1});\ \beta=\sum_{n=0}^{N-1}(r_n^i)^2\\
	\gamma=\sum_{n=0}^{N-1}r_n^i\cos(\theta_n^i)
\end{gather}

The r equations were transformed using the central difference approximation of
$\ddot{r_i}$, and the backward difference approximation of $\dot{\theta_0}$.
These choices seem arbitrary, but allow the $r_{n}$ term to be more easily
solved for.

\begin{gather}
	r_n^{i+1}=2r_n^i-r_n^{i-1}+(\theta_i-\theta_{i-1})^2r_n^i+\left(\omega^2(\ell_0-r_n^i)-g\sin(\theta_n^i)\right)\Delta t^2\\
	\mathrm{where}\ \\
	\omega=\sqrt\frac{k}{m}
\end{gather}

These equations are large and unpleasant, but many of the sums can be computed
in the same for-loop when implemented in code.

To approximate this system, I implemented the algorithms above in the Crystal
programming language.  I then wrote a visualizer which renders the simulation.
An image is shown below, but more media can be found in the project's GitHub
repository.
\begin{center}
	\includegraphics[width=10cm]{sim}
\end{center}

\subsection{Results}

The numerical model is very interesting to play around with, and shows us
the behavior of the system under various conditions. We analyze the system
by plotting the phase-space behavior (namely, angular velocity on the x axis
and angular momentum on the y axis).

\begin{center}
	\includegraphics[width=10cm]{free_rotation}
\end{center}

Shown immediately above is an $N=5$ system released from random initial
conditions. We see that the angular momentum has a nonlinear increase as a
function of angular velocity. We also see the presence of loops in the diagram -
these represent oscillations, where gravity first causes angular velocity to
increase, then rapidly decrease (much like in a planar pendulum).

To truly check if our system has the superlinear response we were hoping for,
we'll need to simulate the use of a motor. This can be done by forcing
the angular velocity to be some predefined function. Any function could be used as a
probe, but we'll simply use $\dot \theta(t)=t$.

\begin{center}
	\includegraphics[width=10cm]{quadratic_rotation}
\end{center}

This data is quite noisy as a result of spring oscillations, but it is clearly
growing much faster than linearly! Using numerical methods, we have confirmed that
this system will behave in the desired fashion.

\section{Conclusion}
Although we have shown that a small change in motor speed can lead to massive
increases in angular momentum, it is still unclear exactly what function governs
this relation. Additionally, the involvement of springs has many of its own
challenges. For example, the system's rotation behaves chaotically when not being actively
driven.

Regardless, the benefits of such a system may outweigh these downsides when
appropriate mitigation strategies are employed.

\end{document}
